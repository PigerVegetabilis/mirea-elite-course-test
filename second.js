/*
# Задание 2
Даны два целочисленных массива ```nums1``` и ```nums2```, отсортированных в **неубывающем порядке**, и два целых числа ```m``` и ```n```, представляющих количество элементов массивов ```nums1``` и ```nums2``` соответственно.

**Объедините** ```nums1``` и ```nums2``` в один целочисленный массив, отсортированный в **неубывающем порядке**.

Итоговый отсортированный массив должен не возвращаться из функции, а *храниться в массиве* ```nums1```. Для достижения этого, ```nums1``` имеет длину ```m+n```, где первые ```m``` элементов обозначают элементы, которые должны быть объединен, и оставшиеся ```n``` элементов установлены в ```0``` и должны игнорироваться. ```nums2``` имеет длину ```n```.
*/
function main(nums1, m, nums2, n){
    const finlength = m + n;
    for (let i = m; i < finlength; i++){
        nums1[i] = nums2.pop();
    }
    nums1.sort((a, b) => a - b);
}
nums1 = [];
nums2 = [1];
m = 0; n = 1;
main(nums1, m, nums2, n);
console.log(nums1);